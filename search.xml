<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[通过workbench导出ER图]]></title>
      <url>http://blog.hugoxia.com/2017/04/20/mysql-workbench-export-ER/</url>
      <content type="html"><![CDATA[<blockquote>
<p>操作系统: Ubuntu14.04</p>
</blockquote>
<h3 id="操作流程概览"><a href="#操作流程概览" class="headerlink" title="操作流程概览"></a>操作流程概览</h3><ul>
<li><code>Database</code> -&gt; <code>Reverse Engine...</code> -&gt; 依次填入信息,然后 <code>&gt; Next</code>, <code>&gt; Next</code>…</li>
<li><code>Ctrl</code>+<code>R</code> -&gt; 依次填入信息, 后面同上</li>
</ul>
<h3 id="操作流程明细-无图无真相"><a href="#操作流程明细-无图无真相" class="headerlink" title="操作流程明细(无图无真相)"></a>操作流程明细(无图无真相)</h3><ul>
<li>执行<code>Ctrl</code>+<code>R</code>后,出现如下对话框<br><img src="/uploads/ER0.png" style="margin: auto" title="One"></li>
<li>Next<br><img src="/uploads/ER1.png" style="margin: auto" title="Two"></li>
<li>Next<br><img src="/uploads/ER2.png" style="margin: auto" title="Three"></li>
<li>Next<br><img src="/uploads/ER3.png" style="margin: auto" title="Four"></li>
<li>Next<br><img src="/uploads/ER4.png" style="margin: auto" title="Five"></li>
<li>Next<br><img src="/uploads/ER5.png" style="margin: auto" title="Six"></li>
<li>Next<br><img src="/uploads/ER6.png" style="margin: auto" title="Seven"></li>
<li>Finish<br><img src="/uploads/ER7.png" style="margin: auto" title="Last"></li>
</ul>
]]></content>
      
        <categories>
            
            <category> workbench </category>
            
        </categories>
        
        
        <tags>
            
            <tag> workbench </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[关于Python中json库的一些整理]]></title>
      <url>http://blog.hugoxia.com/2017/04/19/python-json/</url>
      <content type="html"><![CDATA[<h3 id="json-dump和json-dumps的区别-来自Stackoverflow的释疑"><a href="#json-dump和json-dumps的区别-来自Stackoverflow的释疑" class="headerlink" title="json.dump和json.dumps的区别(来自Stackoverflow的释疑)"></a>json.dump和json.dumps的区别(<a href="http://stackoverflow.com/questions/36059194/what-is-the-difference-between-json-dump-and-json-dumps-in-python" target="_blank" rel="external">来自Stackoverflow的释疑</a>)</h3><ul>
<li><p>json.dump</p>
<blockquote>
<p>Serialize <code>obj</code> as a JSON formatted stream to <code>fp</code> (a <code>.write()</code>-supporting file-like object).<br>If <code>ensure_ascii</code> is <code>False</code>, some chunks written to <code>fp</code> may be <code>unicode</code> instances.</p>
</blockquote>
</li>
<li><p>json.dumps</p>
<blockquote>
<p>Serialize <code>obj</code> to a JSON formatted <code>str</code>.<br>If <code>ensure_ascii</code> is <code>False</code>, all non-ASCII characters are not escaped, and the return value may be a <code>unicode</code> instance.</p>
</blockquote>
</li>
</ul>
<h3 id="ensure-ascii的神奇之处"><a href="#ensure-ascii的神奇之处" class="headerlink" title="ensure_ascii的神奇之处"></a>ensure_ascii的神奇之处</h3><blockquote><p>If <code>ensure_ascii</code> is true (the default), all non-ASCII characters in the output are escaped with <code>\uXXXX</code> sequences, and the result is a <code>str</code> instance consisting of ASCII characters only.  If <code>ensure_ascii</code> is <code>False</code>, some chunks written to <code>fp</code> may be <code>unicode</code> instances. This usually happens because the input contains unicode strings or the <code>encoding</code> parameter is used. Unless <code>fp.write()</code> explicitly understands <code>unicode</code> (as in <code>codecs.getwriter</code>) this is likely to cause an error.</p>
<footer><strong>Python Docs</strong><cite><a href="https://docs.python.org/2/library/json.html?highlight=ensure_ascii#basic-usage" target="_blank" rel="external">Welcome to docs.python.org</a></cite></footer></blockquote>
<h4 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> json</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>data = [<span class="string">u"她"</span>, <span class="string">u"是"</span>, <span class="string">u"美女"</span>]</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>output1 = json.dumps(data)</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>output1</div><div class="line"><span class="string">'["\\u5979", "\\u662f", "\\u7f8e\\u5973"]'</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>print(output1)</div><div class="line">[<span class="string">"\\u5979"</span>, <span class="string">"\\u662f"</span>, <span class="string">"\\u7f8e\\u5973"</span>]</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>output2 = json.dumps(data, ensure_ascii=<span class="keyword">False</span>)</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>outout2</div><div class="line"><span class="string">u'["\u5979", "\u662f", "\u7f8e\u5973"]'</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>print(output2)</div><div class="line">[<span class="string">"她"</span>, <span class="string">"是"</span>, <span class="string">"美女"</span>]</div></pre></td></tr></table></figure>
<h3 id="参数cls的妙用之处理时间"><a href="#参数cls的妙用之处理时间" class="headerlink" title="参数cls的妙用之处理时间"></a>参数cls的妙用之处理时间</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> json</div><div class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">DateTimeEncoder</span><span class="params">(json.JSONEncoder)</span>:</span></div><div class="line">    <span class="string">"""convert datetime to string in json.dumps"""</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">default</span><span class="params">(self, obj)</span>:</span></div><div class="line">        <span class="keyword">if</span> isinstance(obj, datetime):</div><div class="line">            encoded_object = obj.strftime(<span class="string">'%Y-%m-%d %H:%M:%S'</span>)</div><div class="line">        <span class="keyword">elif</span> isinstance(obj, date):</div><div class="line">            encoded_object = obj.strftime(<span class="string">'%Y-%m-%d'</span>)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            encoded_object = json.JSONEncoder.default(self, obj)</div><div class="line">        <span class="keyword">return</span> encoded_object</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line">    data = &#123;<span class="string">"now"</span>: datetime.now()&#125;</div><div class="line">    print(json.dumps(data, cls=DateTimeEncoder))</div><div class="line">    <span class="comment"># output: &#123;"now": "2017-04-19 16:32:53"&#125;</span></div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Python </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
            <tag> Json </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Pycharm实现前进/后退]]></title>
      <url>http://blog.hugoxia.com/2017/04/19/pycharm-jump/</url>
      <content type="html"><![CDATA[<blockquote>
<p>操作系统: Ubuntu14.04; Pycharm版本: 2016.3; 这里的前进指的是追踪函数源码, 后退是前进的反方向。</p>
</blockquote>
<h3 id="前进"><a href="#前进" class="headerlink" title="前进"></a>前进</h3><ul>
<li><code>Ctrl</code>+<code>B</code></li>
<li><code>Ctrl</code>+<code>Q</code>+<code>&lt;F4&gt;</code></li>
</ul>
<h3 id="后退"><a href="#后退" class="headerlink" title="后退"></a>后退</h3><ul>
<li><code>View</code> -&gt; <code>ToolBar</code> -&gt; <code>√ ToolBar</code>(出现工具栏，工具栏中有前进和后退)</li>
<li><code>Ctrl</code>+ <code>Alt</code> + <code>Left</code>(我试了没生效，不知道为啥)</li>
<li>罗技G502鼠标左侧前进键和后退键完美兼容Pycharm(意外之喜)</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Pycharm </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
            <tag> Pycharm </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[西安寻找“吉他”培训班]]></title>
      <url>http://blog.hugoxia.com/2017/04/19/guitar/</url>
      <content type="html"><![CDATA[<blockquote>
<p>这里不包含个人主观情感，纯粹是找培训班花了些时间，我种树，你们乘凉。。。</p>
</blockquote>
<ul>
<li><a href="http://singger0.335la.com/sell/" target="_blank" rel="external">逸尚</a></li>
<li>琴旅</li>
<li>珂珂</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 生活 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Guitar </tag>
            
            <tag> Life </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[鸟叔Linux私房菜基础篇——Linux如何学习]]></title>
      <url>http://blog.hugoxia.com/2017/04/18/linux-2/</url>
      <content type="html"><![CDATA[<h3 id="鸟叔的建议"><a href="#鸟叔的建议" class="headerlink" title="鸟叔的建议:"></a>鸟叔的建议:</h3><h4 id="计算器概论与硬件相关知识"><a href="#计算器概论与硬件相关知识" class="headerlink" title="计算器概论与硬件相关知识:"></a>计算器概论与硬件相关知识:</h4><p>因为既然想要走Linux 这门路,信息相关的基础技能也不能没有啊! 所以先理解一下基础的硬件知识,不用一定要全懂啦!又不是真的要你去组计算机~^_^, 但是至少要『听过、有概念』即可;</p>
<h4 id="先从Linux的安装与指令学起"><a href="#先从Linux的安装与指令学起" class="headerlink" title="先从Linux的安装与指令学起:"></a>先从Linux的安装与指令学起:</h4><p>没有Linux怎么学习Linux呢? 所以好好的安装起一套你需要的Linux吧!虽然说 Linux distributions 很多, 不过基本上架构都是大同小异的,差别在亍接口的亲和力与软件的选择不同罢了! 选择一套你喜欢的就好了,倒是没有哪一套特别好说~</p>
<h4 id="Linux-操作系统的基础技能"><a href="#Linux-操作系统的基础技能" class="headerlink" title="Linux 操作系统的基础技能:"></a>Linux 操作系统的基础技能:</h4><p>这些包含了『使用者、群组的概念』、『权限的观念』,『程序的定义』等等,尤其是权限的概念, 由于不同的权限设定会妨碍你的使用者的便利性,但是太过于便利又会导致入侵的可能! 所以这里需要了解一下你的系统呦!</p>
<h4 id="务必学会vi文书编辑器"><a href="#务必学会vi文书编辑器" class="headerlink" title="务必学会vi文书编辑器:"></a>务必学会vi文书编辑器:</h4><p>Linux的文书编辑器多到会让你数到生气!不过,vi 即是强烈建议要先学习的! 这是因为 vi 会被很多软件所呼叫,加上所有的Unix like 系统上面都有 vi,所以你一定要学会才好!</p>
<h4 id="Shell与Shell-Script的学习"><a href="#Shell与Shell-Script的学习" class="headerlink" title="Shell与Shell Script的学习:"></a>Shell与Shell Script的学习:</h4><p>其实鸟哥上面一直谈到的『文字接口』说穿了就是一个名为shell的软件啦!既然要玩文字接口,当然就是要会使用shell的意思。 但是shell上面的数据太多了,包括『正规表示法』、『管线命令』与『数据流重导向』等等,真的需要了解比较好呦! 此外,为了帮助你未来的管理服务器的便利性,shell scripts 也是挺重要的!要学要学!</p>
<h4 id="一定要会软件管理员"><a href="#一定要会软件管理员" class="headerlink" title="一定要会软件管理员:"></a>一定要会软件管理员:</h4><p>因为玩 Linux 常常会面临得要自己安装驱动程序或者是安装额外软件的时候,尤其是嵌入式设备或者是学术研究单位等。 这个时候 Tarball/RPM/DPKG 等软件管理员的安装方式的了解,对你来说就重要到不行了!</p>
<h4 id="网络基础的建立"><a href="#网络基础的建立" class="headerlink" title="网络基础的建立:"></a>网络基础的建立:</h4><p>如果上面你都通过了,那么网络的基础就是下一阶段要接触的咚咚,这部分包含了『IP 概念』『路由概念』<br>等等;</p>
<h4 id="如果连网络基础都通过了-那举网站的架设对你来说-简直就是『太简单啦-』"><a href="#如果连网络基础都通过了-那举网站的架设对你来说-简直就是『太简单啦-』" class="headerlink" title="如果连网络基础都通过了,那举网站的架设对你来说,简直就是『太简单啦!』"></a>如果连网络基础都通过了,那举网站的架设对你来说,简直就是『太简单啦!』</h4><h3 id="问题来了怎么解决"><a href="#问题来了怎么解决" class="headerlink" title="问题来了怎么解决"></a>问题来了怎么解决</h3><h4 id="在自己的主机上查询How-To或FAQ"><a href="#在自己的主机上查询How-To或FAQ" class="headerlink" title="在自己的主机上查询How-To或FAQ"></a>在自己的主机上查询How-To或FAQ</h4><ul>
<li>Linux 自己的文件数据: /usr/share/doc(在你的Linux系统中)</li>
<li><a href="http://www.linux.org.tw/CLDP/" target="_blank" rel="external">CLDP中文文件计划</a></li>
<li><a href="http://www.tldp.org/" target="_blank" rel="external">The Linux Documentation Project</a></li>
<li><a href="http://www.google.com" target="_blank" rel="external">Google</a></li>
<li><a href="http://linux.vbird.org/Searching.php" target="_blank" rel="external">鸟哥网站</a></li>
</ul>
<h4 id="注意讯息的输出，自行解决疑难杂症"><a href="#注意讯息的输出，自行解决疑难杂症" class="headerlink" title="注意讯息的输出，自行解决疑难杂症:"></a>注意讯息的输出，自行解决疑难杂症:</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@linux ~]<span class="comment"># ls -l /vbird</span></div></pre></td></tr></table></figure>
<p>由于系统并没有 /vbird 这个目彔,所以会在屏幕前面显示:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ls: /vbird: No such file or directory</div></pre></td></tr></table></figure></p>
<p>所以发生错误时，先自行以屏幕前面的信息进行debug(除错)的动作，然后，如果是网络服务的问题时，请到/var/log这个目录下去查阅log file(登录档)，这样就解决了大多数问题了。</p>
<h4 id="各种讨论区里大胆发言，注意网络礼节"><a href="#各种讨论区里大胆发言，注意网络礼节" class="headerlink" title="各种讨论区里大胆发言，注意网络礼节:"></a>各种讨论区里大胆发言，注意网络礼节:</h4><ul>
<li><a href="https://stackoverflow.com/" target="_blank" rel="external">Stackoverflow</a></li>
<li><a href="https://segmentfault.com" target="_blank" rel="external">segmentfault</a></li>
<li>还有这种QQ群和微信群</li>
</ul>
<h4 id="解决完问题，最好作下记录-收藏网上的好文章。"><a href="#解决完问题，最好作下记录-收藏网上的好文章。" class="headerlink" title="解决完问题，最好作下记录; 收藏网上的好文章。"></a>解决完问题，最好作下记录; 收藏网上的好文章。</h4>]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[玩的就是“心跳”]]></title>
      <url>http://blog.hugoxia.com/2017/04/18/heartbeat/</url>
      <content type="html"><![CDATA[<h3 id="心跳检测是什么？"><a href="#心跳检测是什么？" class="headerlink" title="心跳检测是什么？"></a>心跳检测是什么？</h3><p>这里的“心跳”，可不是男女之间心动啥的“砰砰砰”。</p>
<ul>
<li>心跳检测是判断对方(设备，进程或其它网元)是否正常进行，一般采用定时发送简单的通讯包，如果长时间未收到对方响应，则判断对方已经挂掉。</li>
<li><a href="http://www.baike.com/wiki/%E5%BF%83%E8%B7%B3%E6%9C%BA%E5%88%B6" target="_blank" rel="external">心跳机制</a>是服务端和客户端检测对方是否在线的一种方式。</li>
<li>心跳包就是客户端定时发送简单的信息给服务端告诉它我还在，服务端视情况而定给客户单返回合适信息，一般情况下是客户端给服务端发心跳包。</li>
</ul>
<h3 id="为什么要用心跳机制？"><a href="#为什么要用心跳机制？" class="headerlink" title="为什么要用心跳机制？"></a>为什么要用心跳机制？</h3><ul>
<li>服务端不能有效判断客户端是否在线。</li>
<li>心跳包可以用于长连接的保活和断线处理。</li>
</ul>
<h3 id="怎么代码实现心跳机制？"><a href="#怎么代码实现心跳机制？" class="headerlink" title="怎么代码实现心跳机制？"></a>怎么代码实现心跳机制？</h3><ol>
<li>客户端每隔一个时间间隔发生一个探测包给服务器。</li>
<li>客户端发包时启动一个超时定时器。</li>
<li>服务器端接收到检测包，应该回应一个包。</li>
<li>如果客户机收到服务器的应答包，则说明服务器正常，删除超时定时器。</li>
<li>如果客户端的超时定时器超时，依然没有收到应答包，则说明服务器挂了。</li>
</ol>
<h4 id="Python代码实现心跳检测"><a href="#Python代码实现心跳检测" class="headerlink" title="Python代码实现心跳检测"></a>Python代码实现心跳检测</h4><blockquote>
<p>具体代码参见<a href="https://github.com/hugoxia/Python/heartbeat" target="_blank" rel="external">Github</a></p>
</blockquote>
<ul>
<li><p>server</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/python</span></div><div class="line"><span class="comment">#encoding:utf-8</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> socket, sys, json</div><div class="line"><span class="keyword">from</span> thread <span class="keyword">import</span> *</div><div class="line">BUF_SIZE = <span class="number">4096</span></div><div class="line"></div><div class="line">HOST = socket.gethostname()</div><div class="line">PORT = <span class="number">7878</span></div><div class="line"><span class="keyword">try</span>:</div><div class="line">    server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</div><div class="line"><span class="keyword">except</span> socket.error, e:</div><div class="line">    <span class="keyword">print</span> <span class="string">"Error creating socket: %s"</span> % e</div><div class="line">    sys.exit()</div><div class="line"><span class="keyword">try</span>:</div><div class="line">    server.bind((HOST, PORT))</div><div class="line"><span class="keyword">except</span> socket.error:</div><div class="line">    <span class="keyword">print</span> <span class="string">"Bind failed!"</span></div><div class="line">    sys.exit()</div><div class="line"><span class="keyword">print</span> <span class="string">"Socket bind complete"</span></div><div class="line"></div><div class="line">server.listen(<span class="number">10</span>)</div><div class="line"><span class="keyword">print</span> <span class="string">"Socket now listening"</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">clientthread</span><span class="params">(coon)</span>:</span></div><div class="line">    coon.send(<span class="string">"Welcome to the server!"</span>)</div><div class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">        <span class="keyword">try</span>:</div><div class="line">            data = coon.recv(BUF_SIZE)</div><div class="line">            data_loaded = json.loads(data)</div><div class="line">            <span class="keyword">print</span> <span class="string">"ip: &#123;&#125;|status: &#123;&#125;|pid: &#123;&#125;"</span>.format(</div><div class="line">                str(data_loaded[<span class="string">'ip'</span>]), data_loaded[<span class="string">'status'</span>], str(data_loaded[<span class="string">'pid'</span>]</div><div class="line">            )</div><div class="line">        <span class="keyword">except</span> socket.error:</div><div class="line">            <span class="keyword">print</span> <span class="string">"One Client (IP: %s) Connected over!"</span> % data_loaded[<span class="string">'ip'</span>]</div><div class="line">            <span class="keyword">break</span></div><div class="line">    coon.close()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">    coon, addr = server.accept()</div><div class="line">    <span class="keyword">print</span> <span class="string">"Connected with %s: %s "</span> % (addr[<span class="number">0</span>], str(addr[<span class="number">1</span>]))</div><div class="line">    start_new_thread(clientthread, (coon,))</div><div class="line"></div><div class="line">server.close()</div></pre></td></tr></table></figure>
</li>
<li><p>client</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/python</span></div><div class="line"><span class="comment">#encoding:utf-8</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> socket, sys, os</div><div class="line"><span class="keyword">import</span> time, json</div><div class="line"></div><div class="line">host = socket.gethostname()  <span class="comment"># 这里获得的是本地，视情况而定</span></div><div class="line">port = <span class="number">7878</span></div><div class="line">BUF_SIZE = <span class="number">4096</span></div><div class="line"></div><div class="line"><span class="keyword">try</span>:</div><div class="line">    client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</div><div class="line"><span class="keyword">except</span> socket.error, e:</div><div class="line">    <span class="keyword">print</span> <span class="string">"Error creating socket: %s"</span> % e</div><div class="line">    sys.exit()</div><div class="line"></div><div class="line"><span class="keyword">try</span>:</div><div class="line">    remote_ip = socket.gethostbyname(host)</div><div class="line"><span class="keyword">except</span> socket.gaierror:</div><div class="line">    <span class="keyword">print</span> <span class="string">"Hostname couldn't be resolved. Exciting"</span></div><div class="line"></div><div class="line">    sys.exit()</div><div class="line"></div><div class="line"><span class="keyword">try</span>:</div><div class="line">    client.connect((remote_ip, port))</div><div class="line">    client.setblocking(<span class="number">0</span>)   <span class="comment"># set the socket is not blocking</span></div><div class="line">    <span class="keyword">print</span> <span class="string">"Socket connected to %s on ip %s"</span> % (host, remote_ip)</div><div class="line"><span class="keyword">except</span> socket.gaierror, e:  <span class="comment">#address related error</span></div><div class="line">    <span class="keyword">print</span> <span class="string">"connected to server error%s"</span> % e</div><div class="line">    sys.exit()</div><div class="line"></div><div class="line"><span class="comment">#send heart_beat</span></div><div class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">    host_name = socket.gethostname()</div><div class="line">    data_to_server = &#123;</div><div class="line">        <span class="string">'ip'</span>: socket.gethostbyname(host_name), </div><div class="line">        <span class="string">'status'</span>: <span class="string">'alive'</span>, <span class="string">'pid'</span>: os.getpid()</div><div class="line">    &#125;</div><div class="line">    data_dumped = json.dumps(data_to_server)</div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        client.sendall(data_dumped)</div><div class="line">    <span class="keyword">except</span> socket.error:</div><div class="line">        <span class="keyword">print</span> <span class="string">"Send failed!!"</span></div><div class="line">        sys.exit()</div><div class="line"></div><div class="line">    <span class="keyword">print</span> <span class="string">'I - '</span>, os.getpid(), <span class="string">'- am alive.'</span></div><div class="line">    time.sleep(<span class="number">50</span>)</div><div class="line">client.close()</div></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 架构 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
            <tag> Socket </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[鸟叔Linux私房菜基础篇——Linux是什么？]]></title>
      <url>http://blog.hugoxia.com/2017/04/17/linux-1/</url>
      <content type="html"><![CDATA[<blockquote>
<p>古人云: 读书从厚到薄，从薄到厚。我现在开始做第一步。。。</p>
</blockquote>
<h3 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h3><p>无图无真相，先来了图。<br><img src="/uploads/operate_system.png" style="margin: auto" title="操作系统的角色"><br>说白了，操作系统就是一个调度者，实现硬件控制和资源管理的一个管理员。而Linux 提供了一个完整的操作系统当中最底层的硬件控制与资源管理的完整架构。</p>
<h3 id="Linux的核心版本"><a href="#Linux的核心版本" class="headerlink" title="Linux的核心版本"></a>Linux的核心版本</h3><h4 id="查询指令"><a href="#查询指令" class="headerlink" title="查询指令"></a>查询指令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">uname -r</div></pre></td></tr></table></figure>
<h4 id="版本号解释"><a href="#版本号解释" class="headerlink" title="版本号解释"></a>版本号解释</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">2.6.18-92.el5</div><div class="line">主版本.次版本.释出版本-修改版本</div></pre></td></tr></table></figure>
<ul>
<li>次版本为奇数: 发展中版本(development)</li>
<li>次版本为偶数: 稳定版本(stable)<blockquote>
<p>Linux 核心版本和distribution的版本不相同。比如Ubuntu系统, 它的版本号是14.04和linux核心版本明显不同。</p>
</blockquote>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[由罗技G502鼠标引起的“聒噪”]]></title>
      <url>http://blog.hugoxia.com/2017/04/15/pnvssn/</url>
      <content type="html"><![CDATA[<blockquote>
<p>昨晚在京东商城上买了一个罗技鼠标，今天上午到货，于是寻思着吧，找下序列号，查下它是不是正品。按照网友的提示，我在包装盒上翻来覆去，就是找不到可以刮的地方，看到<code>P/N</code>,<code>S/N</code>,这都是啥？？？</p>
</blockquote>
<ul>
<li><code>P/N</code>: Part Number(部件编号)</li>
<li><code>S/N</code>: Serial Number(产品序列号)</li>
<li><code>L/N</code>: Lot Number(批号)</li>
</ul>
<p>有时候咱买回来的产品可能有好几个<code>S/N</code>, 像我的鼠标就是包装盒子上有一个，鼠标绳上也有一个，并且两个都不一样，盒子上标的是1647XXXXXXXXX,鼠标上标的是1648XXXXXXXX，其实不用担心，这并不能说明鼠标不是正品，只是盒子生产的比鼠标早而已，1647表示16年第47周生产的产品。先到这，后续补充再添加。</p>
]]></content>
      
        <categories>
            
            <category> Life </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Life </tag>
            
            <tag> Mouse </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Flask成长之路(一)]]></title>
      <url>http://blog.hugoxia.com/2017/04/14/flask-1/</url>
      <content type="html"></content>
      
        <categories>
            
            <category> Python </category>
            
            <category> Flask </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Pycharm配置autopep8到菜单]]></title>
      <url>http://blog.hugoxia.com/2017/04/12/pycharm-autopep8/</url>
      <content type="html"><![CDATA[<p>Pycharm可以自动检测PEP8规范, 菜单<code>Code</code>–&gt;<code>Reformat Code</code>可以自动调整代码,但是效果一般,只能实现简单的规范代码; 为了满足需要, 可以安装autopep8来自动修改文件实现PEP8规范.</p>
<h3 id="安装autopep8"><a href="#安装autopep8" class="headerlink" title="安装autopep8"></a>安装autopep8</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install autopep8</div></pre></td></tr></table></figure>
<h3 id="Pycharm中进行设置"><a href="#Pycharm中进行设置" class="headerlink" title="Pycharm中进行设置"></a>Pycharm中进行设置</h3><ul>
<li><code>Settings</code>–&gt;<code>Tools</code>–&gt;<code>External Tools</code>, 点击<code>+</code>按钮<ul>
<li>Name: autopep8 (可以自定义)</li>
<li>Tools settings:<ul>
<li>Programs: autopep8(<a href="#注">Ubuntu</a>和<a href="#注">Windows</a>)</li>
<li>Parameters: <code>--in-place --aggressive --aggressive $FilePath$</code></li>
<li>Working directory: <code>$ProjectFileDir$</code></li>
</ul>
</li>
</ul>
</li>
<li>点击<code>Output Filters...</code><ul>
<li>点击<code>+</code>，名称可以任意填写</li>
<li>Regular expression to match output: <code>$FILE_PATH$\:$LINE$\:$COLUMN$\:.*</code></li>
</ul>
</li>
</ul>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><ul>
<li>方法一: 代码上右击–&gt;<code>External Tool</code>–&gt;<code>autopep8</code></li>
<li>方法二: <code>Tools</code>-&gt;<code>External</code>-&gt;<code>autopep8</code></li>
</ul>
<h3 id="注"><a href="#注" class="headerlink" title="注"></a>注</h3><ul>
<li>Ubuntu: 示例绝对路径(/home/hugo/.virtualenvs/test/bin/autopep8)</li>
<li>Windows: 示例绝对路径(C:\Users\hugo\AppData\Local\Programs\Python\Python35\Scripts\autopep8.exe)</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Pycharm </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Pycharm </tag>
            
            <tag> PEP8 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Python中字符串格式化符号和转义字符含义]]></title>
      <url>http://blog.hugoxia.com/2017/04/12/python-format/</url>
      <content type="html"><![CDATA[<blockquote>
<p>这篇文档整理自<a href="http://bbs.fishc.com/forum.php?mod=viewthread&amp;tid=39140&amp;extra=page%3D1%26filter%3Dtypeid%26typeid%3D403" target="_blank" rel="external">鱼C论坛</a>, 感谢作者输出,我只是一枚搬运工…</p>
</blockquote>
<h3 id="字符串格式化符号含义"><a href="#字符串格式化符号含义" class="headerlink" title="字符串格式化符号含义"></a>字符串格式化符号含义</h3><table>
<thead>
<tr>
<th style="text-align:center">符号</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">%c</td>
<td style="text-align:left">格式化字符及其ASCII码</td>
</tr>
<tr>
<td style="text-align:center">%s</td>
<td style="text-align:left">格式化字符串</td>
</tr>
<tr>
<td style="text-align:center">%d</td>
<td style="text-align:left">格式化整数</td>
</tr>
<tr>
<td style="text-align:center">%o</td>
<td style="text-align:left">格式化无符号八进制数</td>
</tr>
<tr>
<td style="text-align:center">%x</td>
<td style="text-align:left">格式化字符号十六进制数</td>
</tr>
<tr>
<td style="text-align:center">%X</td>
<td style="text-align:left">格式化字符号十六进制数(大写)</td>
</tr>
<tr>
<td style="text-align:center">%f</td>
<td style="text-align:left">格式化定点数,可指定小数点后的精度</td>
</tr>
<tr>
<td style="text-align:center">%e</td>
<td style="text-align:left">用科学计数法格式化定点数</td>
</tr>
<tr>
<td style="text-align:center">%E</td>
<td style="text-align:left">作用同%e, 用科学计数法格式化定点数</td>
</tr>
<tr>
<td style="text-align:center">%g</td>
<td style="text-align:left">根据值的大小决定使用%f或%e</td>
</tr>
<tr>
<td style="text-align:center">%G</td>
<td style="text-align:left">作用同%g, 根据值的大小决定使用%f或者%E</td>
</tr>
</tbody>
</table>
<h3 id="格式化操作符辅助指令"><a href="#格式化操作符辅助指令" class="headerlink" title="格式化操作符辅助指令"></a>格式化操作符辅助指令</h3><table>
<thead>
<tr>
<th style="text-align:center">符号</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">m.n</td>
<td style="text-align:left">m是显示的最小总宽度,n是小数点后的位数</td>
</tr>
<tr>
<td style="text-align:center">-</td>
<td style="text-align:left">用于左对齐</td>
</tr>
<tr>
<td style="text-align:center">+</td>
<td style="text-align:left">在正数前面显示加好(+)</td>
</tr>
<tr>
<td style="text-align:center">#</td>
<td style="text-align:left">在八进制数前面显示’0o’, 在十六进制数前面显示’0x’或’0X’</td>
</tr>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:left">显示的数字前面填充’0’取代空格</td>
</tr>
</tbody>
</table>
<h3 id="字符串转义字符含义"><a href="#字符串转义字符含义" class="headerlink" title="字符串转义字符含义"></a>字符串转义字符含义</h3><table>
<thead>
<tr>
<th style="text-align:center">符号</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">\’</td>
<td style="text-align:left">单引号</td>
</tr>
<tr>
<td style="text-align:center">\”</td>
<td style="text-align:left">双引号</td>
</tr>
<tr>
<td style="text-align:center">\a</td>
<td style="text-align:left">发出系统响铃声</td>
</tr>
<tr>
<td style="text-align:center">\b</td>
<td style="text-align:left">退格符</td>
</tr>
<tr>
<td style="text-align:center">\n</td>
<td style="text-align:left">换行符</td>
</tr>
<tr>
<td style="text-align:center">\t</td>
<td style="text-align:left">横向制表符(TAB)</td>
</tr>
<tr>
<td style="text-align:center">\v</td>
<td style="text-align:left">纵向制表符</td>
</tr>
<tr>
<td style="text-align:center">\r</td>
<td style="text-align:left">回车符</td>
</tr>
<tr>
<td style="text-align:center">\f</td>
<td style="text-align:left">换页符</td>
</tr>
<tr>
<td style="text-align:center">\o</td>
<td style="text-align:left">八进制数代表的字符</td>
</tr>
<tr>
<td style="text-align:center">\x</td>
<td style="text-align:left">十六进制数代表的字符</td>
</tr>
<tr>
<td style="text-align:center">\0</td>
<td style="text-align:left">表示一个空字符</td>
</tr>
<tr>
<td style="text-align:center">\</td>
<td style="text-align:left">反斜杠</td>
</tr>
</tbody>
</table>
]]></content>
      
        <categories>
            
            <category> Python </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[第三方登录]]></title>
      <url>http://blog.hugoxia.com/2017/04/11/oauth2/</url>
      <content type="html"><![CDATA[<blockquote>
<p>这篇文档的源自一个第三方登录的需求,于是我就想搞清楚怎么实现第三方登录的,网上有现成的解决方案: <a href="http://dev.umeng.com/social/android/login-page" target="_blank" rel="external">友盟</a>和<a href="http://wiki.mob.com/%E7%AC%AC%E4%B8%89%E6%96%B9%E7%99%BB%E5%BD%95/" target="_blank" rel="external">ShareSDK</a>;但是这不是我最需要,于是就有了下面的的记录: </p>
</blockquote>
<ul>
<li><a href="http://www.ruanyifeng.com/blog/2014/05/oauth_2_0.html" target="_blank" rel="external">阮一峰的网络日志之理解OAuth2.0</a>这篇讲的很详细,可以先看下这个</li>
<li><a href="http://wiki.open.qq.com/wiki/mobile/OAuth2.0%E7%AE%80%E4%BB%8B" target="_blank" rel="external">QQ的OAuth2.0简介</a></li>
<li><a href="https://open.weixin.qq.com/cgi-bin/showdocument?action=dir_list&amp;t=resource/res_list&amp;verify=1&amp;id=open1419317853&amp;token=&amp;lang=zh_CN" target="_blank" rel="external">微信登录功能官方文档(授权登录)</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> Auth </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
            <tag> OAuth2 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Python和Excel的不解之缘]]></title>
      <url>http://blog.hugoxia.com/2017/04/10/python-excel/</url>
      <content type="html"><![CDATA[<h2 id="表格处理模块"><a href="#表格处理模块" class="headerlink" title="表格处理模块"></a>表格处理模块</h2><ul>
<li><a href="http://xlwt.readthedocs.io/en/latest/" target="_blank" rel="external">xlwt (writing xls files)</a></li>
<li><a href="http://xlrd.readthedocs.io/en/latest/" target="_blank" rel="external">xlrd (reading xls/xlsx files)</a></li>
<li><a href="https://openpyxl.readthedocs.io/en/default/" target="_blank" rel="external">openpyxl (reading/writing xlsx files)</a></li>
<li><a href="https://xlsxwriter.readthedocs.io" target="_blank" rel="external">xlsxwriter (writing xlsx files)</a></li>
<li><a href="http://www.python-excel.org/" target="_blank" rel="external">more details</a></li>
</ul>
<h2 id="xlwt"><a href="#xlwt" class="headerlink" title="xlwt"></a>xlwt</h2><p>直接上干货, 重点看export_excel函数<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> xlwt</div><div class="line"><span class="keyword">import</span> functools</div><div class="line"></div><div class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">cost_time</span><span class="params">(method)</span>:</span></div><div class="line"><span class="meta">    @functools.wraps(method)</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(self, *args, **kwargs)</span>:</span></div><div class="line">        start_time = datetime.now()</div><div class="line">        num = method(self, *args, **kwargs)</div><div class="line">        end_time = datetime.now()</div><div class="line">        print(<span class="string">u"导出%s条数据, 共消耗%s时间"</span> % (num, str(end_time - start_time)))</div><div class="line">    <span class="keyword">return</span> wrapper</div><div class="line"></div><div class="line"></div><div class="line"><span class="meta">@cost_time</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">export_excel</span><span class="params">(filename, header, content, *args, **kwargs)</span>:</span></div><div class="line">    wb = xlwt.Workbook()</div><div class="line">    <span class="keyword">if</span> len(content) &gt; <span class="number">65536</span>:</div><div class="line">        <span class="keyword">raise</span> Exception(<span class="string">u"你的数据量为%s, 超过65536, 拒绝通过xlwt导出"</span> % len(content))</div><div class="line">    ws = wb.add_sheet(<span class="string">u"报表"</span>)</div><div class="line">    ws1 = wb.add_sheet(<span class="string">u"表2"</span>)</div><div class="line"></div><div class="line">    <span class="comment"># 写表头</span></div><div class="line">    map(<span class="keyword">lambda</span> h: ws.write(<span class="number">0</span>, h[<span class="number">0</span>], h[<span class="number">1</span>]), enumerate(header))</div><div class="line"></div><div class="line">    <span class="comment"># 写主体内容</span></div><div class="line">    map(<span class="keyword">lambda</span> c: map(<span class="keyword">lambda</span> sub_c: ws.write(c[<span class="number">0</span>] + <span class="number">1</span>, sub_c[<span class="number">0</span>], sub_c[<span class="number">1</span>]), enumerate(c[<span class="number">1</span>])), enumerate(content))</div><div class="line"></div><div class="line">    ws1.write(<span class="number">0</span>, <span class="number">0</span>, <span class="string">u"test"</span>)</div><div class="line"></div><div class="line">    wb.save(filename)</div><div class="line">    <span class="keyword">return</span> len(content)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line">    header = (<span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>, <span class="string">"D"</span>, <span class="string">"E"</span>, <span class="string">"F"</span>, <span class="string">"G"</span>)</div><div class="line">    a = xrange(<span class="number">0</span>, <span class="number">77777</span>*<span class="number">1</span>)</div><div class="line">    content = [(a[i], a[i+<span class="number">1</span>], a[i+<span class="number">2</span>], a[i+<span class="number">3</span>], a[i+<span class="number">4</span>], a[i+<span class="number">5</span>], a[i+<span class="number">6</span>]) <span class="keyword">for</span> i <span class="keyword">in</span> range(len(a))[::<span class="number">7</span>]]</div><div class="line">    export_excel(<span class="string">"test.xls"</span>, header=header, content=content)</div></pre></td></tr></table></figure></p>
<h2 id="xlrd"><a href="#xlrd" class="headerlink" title="xlrd"></a>xlrd</h2><p>后续更新, 敬请期待…</p>
<h2 id="openpyxl"><a href="#openpyxl" class="headerlink" title="openpyxl"></a>openpyxl</h2><p>后续更新, 敬请期待…</p>
<h2 id="xlsxwriter"><a href="#xlsxwriter" class="headerlink" title="xlsxwriter"></a>xlsxwriter</h2><p>后续更新, 敬请期待…</p>
]]></content>
      
        <categories>
            
            <category> Python </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
            <tag> Excel </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[mysql]]></title>
      <url>http://blog.hugoxia.com/2017/03/31/mysql/</url>
      <content type="html"><![CDATA[<h2 id="初涉Mysql"><a href="#初涉Mysql" class="headerlink" title="初涉Mysql"></a>初涉Mysql</h2><h3 id="MySQL概述"><a href="#MySQL概述" class="headerlink" title="MySQL概述"></a>MySQL概述</h3><ul>
<li>MySQL由瑞典MySQL AB公司开发，目前属于Oracle公司.</li>
<li>MySQL是一个开源的关系型数据库管理系统.</li>
<li>MySQL分为社区版和企业版.</li>
</ul>
<h3 id="MySQL的安装与配置"><a href="#MySQL的安装与配置" class="headerlink" title="MySQL的安装与配置"></a>MySQL的安装与配置</h3><h3 id="启动和停止MySQL"><a href="#启动和停止MySQL" class="headerlink" title="启动和停止MySQL"></a>启动和停止MySQL</h3><ul>
<li><p>windows</p>
  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">net start/stop mysql</div></pre></td></tr></table></figure>
</li>
<li><p>linux</p>
  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service mysql start/stop</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="MySQL登录和退出"><a href="#MySQL登录和退出" class="headerlink" title="MySQL登录和退出"></a>MySQL登录和退出</h3><ul>
<li>MySQL登录</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center">参数</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">-D, –database=name</td>
<td style="text-align:center">打开指定数据库</td>
</tr>
<tr>
<td style="text-align:center">–delimiter = name</td>
<td style="text-align:center">指定分隔符</td>
</tr>
<tr>
<td style="text-align:center">-h, –host=name</td>
<td style="text-align:center">服务器名称</td>
</tr>
<tr>
<td style="text-align:center">-p, –password[=name]</td>
<td style="text-align:center">密码</td>
</tr>
<tr>
<td style="text-align:center">-P, –port=#</td>
<td style="text-align:center">端口号</td>
</tr>
<tr>
<td style="text-align:center">–prompt=name</td>
<td style="text-align:center">设置提示符</td>
</tr>
<tr>
<td style="text-align:center">-u, –user=name</td>
<td style="text-align:center">打开指定数据库</td>
</tr>
<tr>
<td style="text-align:center">-V, –version</td>
<td style="text-align:center">输出版本信息并且退出</td>
</tr>
</tbody>
</table>
<ul>
<li>MySQL退出<ul>
<li>mysql &gt; exit;</li>
<li>mysql &gt; quit;</li>
<li>mysql &gt; \q;</li>
</ul>
</li>
</ul>
<h3 id="修改MySQL提示符"><a href="#修改MySQL提示符" class="headerlink" title="修改MySQL提示符"></a>修改MySQL提示符</h3><ul>
<li>MySQL提示符</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center">参数</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">\D</td>
<td style="text-align:center">完整的日期</td>
</tr>
<tr>
<td style="text-align:center">\d</td>
<td style="text-align:center">当前数据库</td>
</tr>
<tr>
<td style="text-align:center">\h</td>
<td style="text-align:center">服务器名称</td>
</tr>
<tr>
<td style="text-align:center">\u</td>
<td style="text-align:center">当前用户</td>
</tr>
</tbody>
</table>
<ul>
<li><p>连接客户端时通过参数指定</p>
  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">shell&gt;mysql -uroot -proot --prompt 提示符</div></pre></td></tr></table></figure>
</li>
<li><p>连接上客户端后，通过prompt命令修改</p>
  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql&gt;prompt 提示符</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="MySQL常用命令"><a href="#MySQL常用命令" class="headerlink" title="MySQL常用命令"></a>MySQL常用命令</h3><ul>
<li><p>显示当前服务器版本</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT VERSION();</div></pre></td></tr></table></figure>
</li>
<li><p>显示当前日期时间</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT NOW();</div></pre></td></tr></table></figure>
</li>
<li><p>显示当前用户</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT USER();</div></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p>MySQL语句的规范</p>
<ul>
<li>关键字和函数名称全部大写</li>
<li>数据库名称 表名称 字段名称全部小写</li>
<li>SQL语句必须以分号结尾</li>
</ul>
</blockquote>
<h3 id="操作数据库"><a href="#操作数据库" class="headerlink" title="操作数据库"></a>操作数据库</h3><ul>
<li><p>创建数据库</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">CREATE &#123;DATABASE | SCHEMA&#125; &#123;IF NOT EXISTS&#125; db_name [DEFAULT] CHARACTER SET [=] charset_name</div></pre></td></tr></table></figure>
</li>
<li><p>查看当前服务器下的数据表列表</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SHOW &#123;DATABASES | SCHEMAS&#125; [LIKE &apos;pattern&apos; | WHERE expr]</div></pre></td></tr></table></figure>
</li>
<li><p>修改数据库</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ALTER &#123;DATABASE | SCHEMA&#125; [db_name] [DEFAULT] CHARACTER SET [=] charset_name</div></pre></td></tr></table></figure>
</li>
<li><p>删除数据库</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">DROP &#123;DATABASE | SCHEMA&#125; [IF EXISTS] db_name</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="数据类型和操作数据表"><a href="#数据类型和操作数据表" class="headerlink" title="数据类型和操作数据表"></a>数据类型和操作数据表</h2><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><blockquote>
<p>数据类型是指列、存储过程参数、表达式和局部变量的数字特征，它决定了数据的存储格式，代表了不同的信息类型。</p>
</blockquote>
<h4 id="整型"><a href="#整型" class="headerlink" title="整型"></a>整型</h4><table>
<thead>
<tr>
<th style="text-align:center">数据类型</th>
<th>存储范围</th>
<th style="text-align:center">字节</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">TINYINT</td>
<td>有符号值: -128到127(-2<sup>7</sup>到2^<sup>7</sup>-1)<br>无符号值: 0到255(0到2<sup>8</sup>-1)</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">SMALLINT</td>
<td>有符号值: -32768到32767(-2<sup>15</sup>到2^<sup>15</sup>-1)<br>无符号值: 0到65535(0到2<sup>16</sup>-1)</td>
<td style="text-align:center">2</td>
</tr>
<tr>
<td style="text-align:center">MEDIUMINT</td>
<td>有符号值: -83886088到8388607(-2<sup>23</sup>到2^<sup>23</sup>-1)<br>无符号值: 0到16777215(0到2<sup>24</sup>-1)</td>
<td style="text-align:center">3</td>
</tr>
<tr>
<td style="text-align:center">INT</td>
<td>有符号值: -2147483648到2147483648(-2<sup>31</sup>到2^<sup>31</sup>-1)<br>无符号值: 0到4294967295(0到2<sup>32</sup>-1)</td>
<td style="text-align:center">4</td>
</tr>
<tr>
<td style="text-align:center">BIGINT</td>
<td>有符号值: -9223373036854775808到9223373036854775807(-2<sup>63</sup>到2^<sup>63</sup>-1)<br>无符号值: 0到18446744073709551615(0到2<sup>64</sup>-1)</td>
<td style="text-align:center">8</td>
</tr>
</tbody>
</table>
<h4 id="浮点型"><a href="#浮点型" class="headerlink" title="浮点型"></a>浮点型</h4><table>
<thead>
<tr>
<th style="text-align:center">数据类型</th>
<th style="text-align:left">存储范围</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">FLOAT[(M,D)]</td>
<td style="text-align:left">-3.402823466E+38到-1.175494351E-38; 0和1.175494351E-38到3.402823466E+38.<br>M是数字总位数, D是小数点后面的位数.如果M和D被省略, 根据硬件允许的限制来保存值.<br>单精度浮点数精确到大约7位小数位.</td>
</tr>
<tr>
<td style="text-align:center">DOUBLE[(M,D)]</td>
<td style="text-align:left">-1.7976931348623157E+308到-2.2250738585072014E-308; <br>0和2.2250738585072014E-308到1.7976931348623157E+308.</td>
</tr>
</tbody>
</table>
<h4 id="日期时间型"><a href="#日期时间型" class="headerlink" title="日期时间型"></a>日期时间型</h4><table>
<thead>
<tr>
<th style="text-align:left">列类型</th>
<th style="text-align:left">存储需求</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">YEAR</td>
<td style="text-align:left">1</td>
</tr>
<tr>
<td style="text-align:left">TIME</td>
<td style="text-align:left">3</td>
</tr>
<tr>
<td style="text-align:left">DATE</td>
<td style="text-align:left">3</td>
</tr>
<tr>
<td style="text-align:left">DATETIME</td>
<td style="text-align:left">8</td>
</tr>
<tr>
<td style="text-align:left">TIMESTAMP</td>
<td style="text-align:left">4</td>
</tr>
</tbody>
</table>
<h4 id="字符型"><a href="#字符型" class="headerlink" title="字符型"></a>字符型</h4><table>
<thead>
<tr>
<th style="text-align:left">列类型</th>
<th>存储需求</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">CHAR(M)</td>
<td>M个字节, 0 &lt;= M &lt;= 255</td>
</tr>
<tr>
<td style="text-align:left">VARCHAR(M)</td>
<td>L+1个字节, 其中L &lt;= M且0 &lt;= M &lt;= 65535</td>
</tr>
<tr>
<td style="text-align:left">TINYTEXT</td>
<td>L+1个字节, 其中L &lt; 2<sup>8</sup></td>
</tr>
<tr>
<td style="text-align:left">TEXT</td>
<td>L+2个字节, 其中L &lt; 2<sup>16</sup></td>
</tr>
<tr>
<td style="text-align:left">MEDIUMTEXT</td>
<td>L+3个字节, 其中L &lt; 2<sup>24</sup></td>
</tr>
<tr>
<td style="text-align:left">LONGTEXT</td>
<td>L+4个字节, 其中L &lt; 2<sup>32</sup></td>
</tr>
<tr>
<td style="text-align:left">ENUM(‘value1’, ‘value2’, …)</td>
<td>1或2个字节, 取决于枚举值的个数(最多65535个值)</td>
</tr>
<tr>
<td style="text-align:left">SET(‘value1’, ‘value2’, …)</td>
<td>1,2,3,4或者8个字节, 取决于set成员的数目(最多64个成员)</td>
</tr>
</tbody>
</table>
<h3 id="操作数据表"><a href="#操作数据表" class="headerlink" title="操作数据表"></a>操作数据表</h3><h4 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h4><ul>
<li>数据表(或称表)是数据库最重要的组成部分之一，是其他对象的基础。</li>
</ul>
<h4 id="USE"><a href="#USE" class="headerlink" title="USE"></a>USE</h4><ul>
<li>打开数据库</li>
<li>USE 数据库名称;</li>
</ul>
<h4 id="创建数据表"><a href="#创建数据表" class="headerlink" title="创建数据表"></a>创建数据表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> [<span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>] table_name (</div><div class="line">    column_name data_type, </div><div class="line">    ...</div><div class="line">)</div></pre></td></tr></table></figure>
<h4 id="查看数据表列表"><a href="#查看数据表列表" class="headerlink" title="查看数据表列表"></a>查看数据表列表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SHOW</span> <span class="keyword">TABLES</span> [<span class="keyword">FROM</span> db_name]</div><div class="line">[<span class="keyword">LIKE</span> <span class="string">'pattern'</span> | <span class="keyword">WHERE</span> expr]</div></pre></td></tr></table></figure>
<h4 id="查看数据表结构"><a href="#查看数据表结构" class="headerlink" title="查看数据表结构"></a>查看数据表结构</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SHOW</span> <span class="keyword">COLUMNS</span> <span class="keyword">FROM</span> tbl_name</div></pre></td></tr></table></figure>
<h4 id="插入记录"><a href="#插入记录" class="headerlink" title="插入记录"></a>插入记录</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">INSERT</span> [<span class="keyword">INTO</span>] tbl_name [(col_name,...)] <span class="keyword">VALUES</span> (val,...)</div></pre></td></tr></table></figure>
<h4 id="记录查找"><a href="#记录查找" class="headerlink" title="记录查找"></a>记录查找</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> expr,... <span class="keyword">FROM</span> tbl_name</div></pre></td></tr></table></figure>
<h4 id="空值与非空"><a href="#空值与非空" class="headerlink" title="空值与非空"></a>空值与非空</h4><ul>
<li>NULL, 字段值可以为空</li>
<li>NOT NULL, 字段值禁止为空</li>
</ul>
<h4 id="AUTO-INCREMENT"><a href="#AUTO-INCREMENT" class="headerlink" title="AUTO_INCREMENT"></a>AUTO_INCREMENT</h4><ul>
<li>自动编号，且必须与主键组合使用</li>
<li>默认情况下，起始值为1，每次增量为1</li>
</ul>
<h4 id="PRIMARY-KEY"><a href="#PRIMARY-KEY" class="headerlink" title="PRIMARY KEY"></a>PRIMARY KEY</h4><ul>
<li>主键约束</li>
<li>每张数据表只能存在一个主键</li>
<li>主键保证记录的唯一性</li>
<li>主键自动为NOT NULL</li>
</ul>
<h4 id="UNIQUE-KEY"><a href="#UNIQUE-KEY" class="headerlink" title="UNIQUE KEY"></a>UNIQUE KEY</h4><ul>
<li>唯一约束</li>
<li>唯一约束可以保证记录的唯一性</li>
<li>唯一约束的字段可以为空值(NULL)</li>
<li>每张数据表可以存在多个唯一约束</li>
</ul>
<h4 id="DEFAULT"><a href="#DEFAULT" class="headerlink" title="DEFAULT"></a>DEFAULT</h4><ul>
<li>默认值</li>
<li>当插入记录时，如果没有明确为字段赋值，则自动赋予默认值。</li>
</ul>
<h2 id="约束以及修改数据表"><a href="#约束以及修改数据表" class="headerlink" title="约束以及修改数据表"></a>约束以及修改数据表</h2><h3 id="约束"><a href="#约束" class="headerlink" title="约束"></a>约束</h3><ul>
<li>约束保证数据的完整性和一致性。</li>
<li>约束分为表级约束和列级约束。</li>
<li>约束类型包括:<ul>
<li>NOT NULL(非空约束)</li>
<li>PRIMARY KEY(主键约束)</li>
<li>UNIQUE KEY(唯一约束)</li>
<li>DEFAULT(默认约束)</li>
<li>FOREIGIN KEY(外键约束)</li>
</ul>
</li>
</ul>
<h4 id="FOREIGN-KEY"><a href="#FOREIGN-KEY" class="headerlink" title="FOREIGN KEY"></a>FOREIGN KEY</h4><ul>
<li>保持数据一致性，完整性</li>
<li>实现一对一或一对多关系。</li>
</ul>
<h4 id="外键约束的要求"><a href="#外键约束的要求" class="headerlink" title="外键约束的要求"></a>外键约束的要求</h4><ul>
<li>父表和子表必须使用相同的存储引擎，而且禁止使用临时表。</li>
<li>数据表的存储引擎只能为InnoDB。</li>
<li>外键列和参照列必须具有相似的数据类型。其中数字的长度或是否有符号位必须相同;而字符的长度则可以不同。</li>
<li>外键列和参照列必须创建索引。如果外键列不存在索引的话，MySQL将自动创建索引。<h4 id="编辑数据表的默认存储引擎"><a href="#编辑数据表的默认存储引擎" class="headerlink" title="编辑数据表的默认存储引擎"></a>编辑数据表的默认存储引擎</h4>MySQL配置文件<br>  <code>default-storage-engine=INNODB</code></li>
</ul>
<h3 id="数据表的操作"><a href="#数据表的操作" class="headerlink" title="数据表的操作"></a>数据表的操作</h3><h2 id="操作数据表中的记录"><a href="#操作数据表中的记录" class="headerlink" title="操作数据表中的记录"></a>操作数据表中的记录</h2><h2 id="子查询和连接"><a href="#子查询和连接" class="headerlink" title="子查询和连接"></a>子查询和连接</h2><h2 id="运算符和函数"><a href="#运算符和函数" class="headerlink" title="运算符和函数"></a>运算符和函数</h2><h2 id="自定义函数"><a href="#自定义函数" class="headerlink" title="自定义函数"></a>自定义函数</h2><h2 id="MySQL存储过程"><a href="#MySQL存储过程" class="headerlink" title="MySQL存储过程"></a>MySQL存储过程</h2><h2 id="MySQL存储引擎"><a href="#MySQL存储引擎" class="headerlink" title="MySQL存储引擎"></a>MySQL存储引擎</h2><h2 id="MySQL图形化管理工具"><a href="#MySQL图形化管理工具" class="headerlink" title="MySQL图形化管理工具"></a>MySQL图形化管理工具</h2>]]></content>
      
        <categories>
            
            <category> Database </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Mysql </tag>
            
            <tag> Database </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://blog.hugoxia.com/2017/03/31/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[scp]]></title>
      <url>http://blog.hugoxia.com/2015/10/10/scp/</url>
      <content type="html"></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Python3正则表达式特殊符号及用法(详细列表)]]></title>
      <url>http://blog.hugoxia.com/2015/09/26/regex/</url>
      <content type="html"><![CDATA[<blockquote>
<p>这篇文档整理自<a href="http://bbs.fishc.com/forum.php?mod=viewthread&amp;tid=57691&amp;extra=page%3D1%26filter%3Dtypeid%26typeid%3D403" target="_blank" rel="external">鱼C论坛</a>, 感谢作者输出,我只是一枚搬运工…</p>
</blockquote>
<p>正则表达式的强大之处在于特殊符号的应用,特殊符号定义了字符集合、子组匹配、模式重复次数。正是这些特性符号使得一个正则表达式可以匹配字符串集合而不只是一个字符串。</p>
<blockquote>
<p>注1: 为了便于理解，难点的地方均用<em>斜体</em>举了栗子。</p>
</blockquote>
<table>
<thead>
<tr>
<th style="text-align:center">字符</th>
<th style="text-align:left">含义</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">.</td>
<td style="text-align:left">表示匹配除了换行符外的任何字符 <br> 注: 通过设置re.DOTALL标志可以使.匹配任何字符(包括换行符)</td>
</tr>
<tr>
<td style="text-align:center">&brvbar;(竖杠)</td>
<td style="text-align:left">A&brvbar;(竖杠)B,表示匹配正则表达式A或者B</td>
</tr>
<tr>
<td style="text-align:center">^</td>
<td style="text-align:left">1.(脱字符)匹配输入字符串的开始位置 <br>2.如果设置了re.MULTILINE标志,^也匹配换行符之后的位置</td>
</tr>
<tr>
<td style="text-align:center">$</td>
<td style="text-align:left">1.匹配输入字符串的结束位置<br>2.如果设置了re.MULTILINE标志,\$也匹配换行符之前的位置</td>
</tr>
<tr>
<td style="text-align:center">\</td>
<td style="text-align:left">1.将一个普通字符变成特殊字符，例如 \d 表示匹配所有十进制数字<br>2. 解除元字符的特殊功能，例如 \. 表示匹配点号本身<br>3. 引用序号对应的子组所匹配的字符串<br>4. 详见下方列举</td>
</tr>
<tr>
<td style="text-align:center">[…]</td>
<td style="text-align:left">字符类，匹配所包含的任意一个字符<br>注1：连字符 - 如果出现在字符串中间表示字符范围描述；如果如果出现在首位则仅作为普通字符<br>注2：特殊字符仅有反斜线 \ 保持特殊含义，用于转义字符。其它特殊字符如 *、+、? 等均作为普通字符匹配 <br>注3：脱字符 ^ 如果出现在首位则表示匹配不包含其中的任意字符；如果 ^ 出现在字符串中间就仅作为普通字符匹配</td>
</tr>
<tr>
<td style="text-align:center">{M,N}</td>
<td style="text-align:left">M 和 N 均为非负整数，其中 M &lt;= N，表示前边的 RE 匹配 M ~ N 次<br>注1：{M,} 表示至少匹配 M 次<br>注2：{,N} 等价于 {0,N}<br>注3：{N} 表示需要匹配 N 次</td>
</tr>
<tr>
<td style="text-align:center">*</td>
<td style="text-align:left">匹配前面的子表达式零次或多次，等价于 {0,}</td>
</tr>
<tr>
<td style="text-align:center">+</td>
<td style="text-align:left">匹配前面的子表达式一次或多次，等价于 {1,}</td>
</tr>
<tr>
<td style="text-align:center">?</td>
<td style="text-align:left">匹配前面的子表达式零次或一次，等价于 {0,1}</td>
</tr>
<tr>
<td style="text-align:center">*?, +?, ??</td>
<td style="text-align:left">默认情况下 *、+ 和 ? 的匹配模式是贪婪模式（即会尽可能多地匹配符合规则的字符串）；*?、+?和 ?? 表示启用对应的非贪婪模式。<br><em>举个栗子：对于字符串 “FishCCC”，正则表达式 FishC+ 会匹配整个字符串，而 FishC+? 则匹配 “FishC”。</em></td>
</tr>
<tr>
<td style="text-align:center">{M,N}?</td>
<td style="text-align:left">同上，启用非贪婪模式，即只匹配 M 次</td>
</tr>
<tr>
<td style="text-align:center">(…)</td>
<td style="text-align:left">匹配圆括号中的正则表达式，或者指定一个子组的开始和结束位置<br>注：子组的内容可以在匹配之后被 \数字 再次引用<br> <em>举个栗子：(\w+) \1 可以字符串 “FishC FishC.com” 中的 “FishC FishC”（注意有空格）</em></td>
</tr>
<tr>
<td style="text-align:center">(?…)</td>
<td style="text-align:left">(? 开头的表示为正则表达式的扩展语法（下边这些是 Python 支持的所有扩展语法）</td>
</tr>
<tr>
<td style="text-align:center">(?aiLmsux)</td>
<td style="text-align:left">1. (? 后可以紧跟着 ‘a’，’i’，’L’，’m’，’s’，’u’，’x’ 中的一个或多个字符，只能在正则表达式的开头使用<br>2. 每一个字符对应一种匹配标志：re-A（只匹配 ASCII 字符），re-I（忽略大小写），re-L（区域设置），re-M（多行模式）, re-S（. 匹配任何符号），re-X（详细表达式），包含这些字符将会影响整个正则表达式的规则<br>3. 当你不想通过 re.compile() 设置正则表达式标志，这种方法就非常有用啦<br>注意，由于 (?x) 决定正则表达式如何被解析，所以它应该总是被放在最前边（最多允许前边有空白符）。如果 (?x) 的前边是非空白字符，那么 (?x) 就发挥不了作用了。</td>
</tr>
<tr>
<td style="text-align:center">(?:…)</td>
<td style="text-align:left">非捕获组，即该子组匹配的字符串无法从后边获取</td>
</tr>
<tr>
<td style="text-align:center">(?P<name>…)</name></td>
<td style="text-align:left">命名组，通过组的名字（name）即可访问到子组匹配的字符串</td>
</tr>
<tr>
<td style="text-align:center">(?P=name)</td>
<td style="text-align:left">反向引用一个命名组，它匹配指定命名组匹配的任何内容</td>
</tr>
<tr>
<td style="text-align:center">(?#…)</td>
<td style="text-align:left">注释，括号中的内容将被忽略</td>
</tr>
<tr>
<td style="text-align:center">(?=…)</td>
<td style="text-align:left">前向肯定断言。如果当前包含的正则表达式（这里以 … 表示）在当前位置成功匹配，则代表成功，否则失败。一旦该部分正则表达式被匹配引擎尝试过，就不会继续进行匹配了；剩下的模式在此断言开始的地方继续尝试。<br><em>举个栗子：love(?=FishC) 只匹配后边紧跟着 “FishC” 的字符串 “love”</em></td>
</tr>
<tr>
<td style="text-align:center">(?!…)</td>
<td style="text-align:left">前向否定断言。这跟前向肯定断言相反（不匹配则表示成功，匹配表示失败）。<br><em>举个栗子：FishC(?!.com) 只匹配后边不是 “.com” 的字符串 “FishC”</em></td>
</tr>
<tr>
<td style="text-align:center">(?&lt;=…)</td>
<td style="text-align:left">后向肯定断言。跟前向肯定断言一样，只是方向相反。<br><em>举个栗子：(?&lt;=love)FishC 只匹配前边紧跟着 “love” 的字符串 “FishC”</em></td>
</tr>
<tr>
<td style="text-align:center">(?&lt;!…)</td>
<td style="text-align:left">后向否定断言。跟前向肯定断言一样，只是方向相反。<br><em>举个栗子：(?&lt;!FishC).com 只匹配前边不是 “FishC” 的字符串 “.com”</em></td>
</tr>
<tr>
<td style="text-align:center">(?(id/name)yes-pattern&brvbar;(竖杠)no-pattern)</td>
<td style="text-align:left">1. 如果子组的序号或名字存在的话，则尝试 yes-pattern 匹配模式；否则尝试 no-pattern 匹配模式<br>2. no-pattern 是可选的<br><em>举个栗子：(&lt;)?(\w+@\w+(?:\.\w+)+)(?(1)&gt;&brvbar;(竖杠)$) 是一个匹配邮件格式的正则表达式，可以匹配  &lt;user@fishc.com&gt; 和 ‘user@fishc.com’，但是不会匹配 ‘&lt;user@fishc.com’ 或 ‘user@fishc.com&gt;’</em></td>
</tr>
<tr>
<td style="text-align:center">\</td>
<td style="text-align:left">下边列举了由字符 ‘\’ 和另一个字符组成的特殊含义。注意，’\’ + 元字符的组合可以解除元字符的特殊功能</td>
</tr>
<tr>
<td style="text-align:center">\序号</td>
<td style="text-align:left">1. 引用序号对应的子组所匹配的字符串，子组的序号从 1 开始计算<br>2. 如果序号是以 0 开头，或者 3 个数字的长度。那么不会被用于引用对应的子组，而是用于匹配八进制数字所表示的 ASCII 码值对应的字符<br><em>举个栗子：(.+) \1 会匹配 “FishC FishC” 或 “55 55”，但不会匹配 “FishCFishC”（注意，因为子组后边还有一个空格）</em></td>
</tr>
<tr>
<td style="text-align:center">\A</td>
<td style="text-align:left">匹配输入字符串的开始位置</td>
</tr>
<tr>
<td style="text-align:center">\Z</td>
<td style="text-align:left">匹配输入字符串的结束位置</td>
</tr>
<tr>
<td style="text-align:center">\b</td>
<td style="text-align:left">匹配一个单词边界，单词被定义为 Unidcode 的字母数字或下横线字符<br><em>举个栗子：\bFishC\b 会匹配字符串 “love FishC”、FishC.” 或 “(FishC)”</em></td>
</tr>
<tr>
<td style="text-align:center">\B</td>
<td style="text-align:left">匹配非单词边界，其实就是与 \b 相反<br><em>举个栗子：py\B 会匹配字符串 “python”、”py3”  或 “py2”，但不会匹配 “py  “、”py.” 或  “py!”</em></td>
</tr>
<tr>
<td style="text-align:center">\d</td>
<td style="text-align:left">1. 对于 Unicode（str 类型）模式：匹配任何一个数字，包括 [0-9] 和其他数字字符；如果开启了 re.ASCII 标志，就只匹配 [0-9]<br>2. 对于 8 位（bytes 类型）模式：匹配 [0-9] 中任何一个数字</td>
</tr>
<tr>
<td style="text-align:center">\D</td>
<td style="text-align:left">匹配任何非 Unicode 的数字，其实就是与 \d 相反；如果开启了 re.ASCII 标志，则相当于匹配 [^0-9]</td>
</tr>
<tr>
<td style="text-align:center">\s</td>
<td style="text-align:left">1. 对于 Unicode（str 类型）模式：匹配 Unicode 中的空白字符（包括 [ \t\n\r\f\v] 以及其他空白字符）；如果开启了 re.ASCII 标志，就只匹配 [ \t\n\r\f\v]<br>2. 对于 8 位（bytes 类型）模式：匹配 ASCII 中定义的空白字符，即 [ \t\n\r\f\v]</td>
</tr>
<tr>
<td style="text-align:center">\S</td>
<td style="text-align:left">匹配任何非 Unicode 中的空白字符，其实就是与 \s 相反；如果开启了 re.ASCII 标志，则相当于匹配 [^ \t\n\r\f\v]</td>
</tr>
<tr>
<td style="text-align:center">\w</td>
<td style="text-align:left">1. 对于 Unicode（str 类型）模式：匹配任何 Unicode 的单词字符，基本上所有语言的字符都可以匹配，当然也包括数字和下横线；如果开启了 re.ASCII 标志，就只匹配 [a-zA-Z0-9<em>]<br>2. 对于 8 位（bytes 类型）模式：匹配 ASCII 中定义的字母数字，即 [a-zA-Z0-9</em>]</td>
</tr>
<tr>
<td style="text-align:center">\W</td>
<td style="text-align:left">匹配任何非 Unicode 的单词字符，其实就是与 \w 相反；如果开启了 re.ASCII 标志，则相当于 [^a-zA-Z0-9_]</td>
</tr>
<tr>
<td style="text-align:center">转义符号</td>
<td style="text-align:left">正则表达式还支持大部分 Python 字符串的转义符号：<br>\a，\b，\f，\n，\r，\t，\u，\U，\v，\x，\\<br>注1：\b 通常用于匹配一个单词边界，只有在字符类中才表示“退格”<br>注2：\u 和 \U 只有在 Unicode 模式下才会被识别<br>注3：八进制转义（\数字）是有限制的，如果第一个数字是 0，或者如果有 3 个八进制数字，那么就被认为是八进制数；其他情况则被认为是子组引用；至于字符串，八进制转义总是最多只能是 3 个数字的长度</td>
</tr>
</tbody>
</table>
]]></content>
      
        <categories>
            
            <category> Regex </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
            <tag> Regex </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Vim Cheat Sheet]]></title>
      <url>http://blog.hugoxia.com/2015/09/21/vim/</url>
      <content type="html"><![CDATA[<h2 id="光标"><a href="#光标" class="headerlink" title="光标"></a>光标</h2><ul>
<li>h - 左移光标</li>
<li>j - 下移光标</li>
<li>k - 上移光标</li>
<li>l - 右移光标</li>
<li>w - 移动到下个单词开头</li>
<li>W - 移动到下个单词开头(单词含标点)</li>
<li>e - 移动到下个单词结尾</li>
<li>E - 移动到下个单词结尾(单词含标点)</li>
<li>b - 移动到上个单词结尾</li>
<li>B - 移动到上个单词结尾(单词含标点)</li>
<li>0 - 移动到行首</li>
<li>^ - 移动到行首的非空白符</li>
<li>$ - 移动到行尾</li>
<li>G - 移动到文档末行行首</li>
<li>5G - 移动到第五行</li>
</ul>
<p>Tip1 : 命令前追加数字表示命令的重复次数, 比如4j 表示向下移动四行</p>
<h2 id="插入模式-插入-追加文本"><a href="#插入模式-插入-追加文本" class="headerlink" title="插入模式 - 插入/追加文本"></a>插入模式 - 插入/追加文本</h2><ul>
<li>i - 从光标前开始插入字符</li>
<li>I - 从行首开始插入字符</li>
<li>a - 从光标后开始插入字符</li>
<li>A - 从行尾开始插入字符</li>
<li>o - 在当前行之下另起一行, 开始插入字符</li>
<li>O - 在当前行之上另起一行, 开始插入字符</li>
<li>ea - 从当前单词末尾开始插入</li>
<li>Esc - 退出插入模式</li>
</ul>
<h2 id="编辑"><a href="#编辑" class="headerlink" title="编辑"></a>编辑</h2><ul>
<li>r - 替换当前字符</li>
<li>J - 将下一行合并到当前行</li>
<li>cc - 清空当前行, 然后进入插入模式</li>
<li>cw - 从光标位置开始, 修改单词</li>
<li>c$ - 从光标位置开始, 修改当前行</li>
<li>s - 删除当前字符, 然后进入插入模式</li>
<li>S - 清空当前行, 然后进入插入模式 (同cc)</li>
<li>xp - 当前字符后移</li>
<li>u - 撤销</li>
<li>Ctrl + r - 重复</li>
<li>. - 再次执行上个命令</li>
</ul>
<h2 id="选择文本（可视化模式）"><a href="#选择文本（可视化模式）" class="headerlink" title="选择文本（可视化模式）"></a>选择文本（可视化模式）</h2><ul>
<li>v - 进入可视化模式, 移动光标高亮选择, 然后可以对选择的文本执行命令(比如y-复制)</li>
<li>V - 进入可视化模式(行粒度选择)</li>
<li>o - 切换光标到选择区开头/结尾</li>
<li>Ctrl + v - 进入可视化模式(矩阵选择)</li>
<li>O - 切换光标到选择区的角</li>
<li>aw - 选择当前单词</li>
<li>ab - 选择被 () 包裹的区域(含括号)</li>
<li>aB - 选择被 {} 包裹的区域(含花括号)</li>
<li>ib - 选择被 () 包裹的区域(不含括号)</li>
<li>iB - 选择被 {} 包裹的区域(不含花括号)</li>
<li>Esc - 退出可视化模式</li>
</ul>
<h2 id="可视化模式命令"><a href="#可视化模式命令" class="headerlink" title="可视化模式命令"></a>可视化模式命令</h2><ul>
<li>&lt; - 向左缩进 | &gt; - 向右缩进</li>
<li>y - 复制</li>
<li>d - 剪切</li>
<li>~ - 大小写切换</li>
</ul>
<h2 id="剪切-复制-粘贴"><a href="#剪切-复制-粘贴" class="headerlink" title="剪切, 复制, 粘贴"></a>剪切, 复制, 粘贴</h2><ul>
<li>yy - 复制当前行</li>
<li>2yy - 复制 2 行</li>
<li>yw - 复制当前单词</li>
<li>y$ - 复制, 从光标位置到行末</li>
<li>p - 在光标后粘贴</li>
<li>P - 在光标前粘贴</li>
<li>dd - 剪切当前行</li>
<li>2dd - 剪切 2 行</li>
<li>dw - 剪切当前单词</li>
<li>D - 剪切, 从光标位置到行末</li>
<li>d$ - 剪切, 从光标位置到行末 (同D)</li>
<li>x - 剪切当前字符</li>
</ul>
<h2 id="查找-替换"><a href="#查找-替换" class="headerlink" title="查找/替换"></a>查找/替换</h2><ul>
<li>/pattern - 查找pattern</li>
<li>?pattern - 向上查找pattern</li>
<li>n - 查找下一个</li>
<li>N - 查找上一个</li>
<li>:%s/old/new/g - 替换全部</li>
<li>:%s/old/new/gc - (逐个)替换</li>
</ul>
<h2 id="多文件"><a href="#多文件" class="headerlink" title="多文件"></a>多文件</h2><ul>
<li>:e filename - 新建缓冲区打开 filename</li>
<li>:bnext or :bn - 切换到下个缓冲区</li>
<li>:bprev or :bp - 切换到上个缓冲区</li>
<li>:bd - 关闭缓冲区</li>
<li>:sp filename - 新建缓冲区打开 filename 并水平分栏</li>
<li>:vsp filename - 新缓冲区打开 filename 并垂直分栏</li>
<li>Ctrl + ws - 水平分栏</li>
<li>Ctrl + ww - 在分栏间切换</li>
<li>Ctrl + wq - 关闭分栏</li>
<li>Ctrl + wv - 垂直分栏</li>
<li>Ctrl + wh - 切换到右侧分栏</li>
<li>Ctrl + wl - 切换到左侧分栏</li>
<li>Ctrl + wj - move cursor to the window below (horizontal split)</li>
<li>Ctrl + wk - move cursor to the window above (horizontal split)</li>
</ul>
<h2 id="页签"><a href="#页签" class="headerlink" title="页签"></a>页签</h2><ul>
<li>:tabnew filename or :tabn filename - 创建新页签/在新标签页中打开文档</li>
<li>Ctrl + wT - 将分栏变成页签</li>
<li>gt or :tabnext or :tabn - 切换到下一个页签</li>
<li>gT or :tabprev or :tabp - 切换到上一个页签</li>
<li>Xgt - 切换到第X个页签</li>
<li>:tabmove # - 移动页签到第 # 位(下标从 0 开始)</li>
<li>:tabclose or :tabc - 关闭当前页签</li>
<li>:tabonly or :tabo - 关闭其他页签</li>
</ul>
<p>Tip2: “X”表示一个具体的数字</p>
<h2 id="退出"><a href="#退出" class="headerlink" title="退出"></a>退出</h2><ul>
<li>:w - 保存</li>
<li>:wq or :x or ZZ - 保存并退出</li>
<li>:q - 退出(修改未保存时警告)</li>
<li>:q! or ZQ - 不保存强制退出</li>
</ul>
<h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><ul>
<li>nu 显示光标所在行号</li>
<li>set nu 显示所有行号</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> vim </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
